
stages:
  - bundle
  - publish

build-docker:
  image: docker:24
  stage: bundle
  before_script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build
      --pull
      --cache-from $CI_REGISTRY_IMAGE:latest
      --label "org.opencontainers.image.title=$CI_PROJECT_TITLE"
      --label "org.opencontainers.image.url=$CI_PROJECT_URL"
      --label "org.opencontainers.image.created=$CI_JOB_STARTED_AT"
      --label "org.opencontainers.image.revision=$CI_COMMIT_SHA"
      --label "org.opencontainers.image.version=$CI_COMMIT_REF_NAME"
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

build-helm:
  image: 
    name: alpine/helm
    entrypoint: [""]
  stage: bundle
  script:
    #- echo $VERSION
    #- helm package ./helm --app-version=$VERSION
    - helm package ./helm
  artifacts:
    paths:
    - "*.tgz"

publish-docker-latest:
  image: docker:24
  variables:
    GIT_STRATEGY: none
  stage: publish
  only:
    - main
  before_script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

publish-docker-tag:
  image: docker:24
  variables:
    GIT_STRATEGY: none
  stage: publish
  only:
    - tags
  before_script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

publish-helm-tag:
  image: curlimages/curl:latest
  stage: publish
  dependencies:
    - build-helm
  only:
    - tags
  script:
    - >
      curl 
      --request POST 
      --user gitlab-ci-token:$CI_JOB_TOKEN 
      --form "chart=@gogin-0.1.0.tgz" 
      "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/devel/charts"